#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : enable

#include "payload.glsl"
#include "scene_data.glsl"

#define MAX_RECUSION_DEPTH 5

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;

layout(location = 0) rayPayloadEXT Payload payload;

void main() {
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = sceneData.inv_view * vec4(0,0,0,1);
    vec4 target = sceneData.inv_proj * vec4(d.x, d.y, 1, 1);
    vec4 direction = sceneData.inv_view * vec4(normalize(target.xyz), 0);

    payload.next_origin = origin.xyz;
    payload.next_direction = direction.xyz;
    payload.next_contribution_factor = vec3(1.0);

    vec3 contribution = vec3(1.0);
    vec3 color = vec3(0.0);
    int depth = 0;

    float tmin = 0.01;
    float tmax = 10000.0;

    while(depth < MAX_RECUSION_DEPTH && length(payload.next_direction) > 0.1 && length(contribution) > 0.001) {
        traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, payload.next_origin, tmin, payload.next_direction, tmax, 0);

        color += contribution * payload.direct_light;
        contribution *= payload.next_contribution_factor;
        depth++;
    }

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(color, 0.0));
}